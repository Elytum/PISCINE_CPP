#include "Pony.hpp"
#include <iostream>

#define UNICORN \
"                                . . . .\n"\
"                                ,`,`,`,`,\n"\
"          . . . .               `\\`\\`\\`\\;\n"\
"          `\\`\\`\\`\\`,            ~|;!;!;\\!\n"\
"           ~\\;\\;\\;\\|\\          (--,!!!~`!       .\n"\
"          (--,\\===~\\         (--,|||~`!     ./\n"\
"           (--,\\===~\\         `,-,~,=,:. _,//\n"\
"            (--,\\==~`\\        ~-=~-.---|\\;/J,\n"\
"             (--,\\((```==.    ~'`~/       a |\n"\
"               (-,.\\('('(`\\.  ~'=~|     \\_.  \\\n"\
"                  (,--(,(,(,'\\. ~'=|       \\_;>\n"\
"                    (,-( ,(,(,;\\ ~=/        \\\n"\
"                    (,-/ (.(.(,;\\,/          )\n"\
"                     (,--/,;,;,;,\\         ./------.\n"\
"                       (==,-;-'`;'         /_,----`. \\\n"\
"               ,.--_,__.-'                    `--.  ` \\\n"\
"              (='~-_,--/        ,       ,!,___--. \\  \\_)\n"\
"             (-/~(     |         \\   ,_-         | ) /_|\n"\
"             (~/((\\    )\\._,      |-'         _,/ /\n"\
"              \\))))  /   ./~.    |           \\_\\;\n"\
"           ,__/////  /   /    )  /\n"\
"            '===~'   |  |    (, <.\n"\
"                     / /       \\. \\\n"\
"                   _/ /          \\_\\\n"\
"                  /_!/            >_\\"

#define UNICORN_DIED \
"▄• ▄▌ ▐ ▄ ▪   ▄▄·       ▄▄▄   ▐ ▄     ·▄▄▄▄  ▪  ▄▄▄ .·▄▄▄▄  \n"\
"█▪██▌•█▌▐███ ▐█ ▌▪▪     ▀▄ █·•█▌▐█    ██▪ ██ ██ ▀▄.▀·██▪ ██ \n"\
"█▌▐█▌▐█▐▐▌▐█·██ ▄▄ ▄█▀▄ ▐▀▀▄ ▐█▐▐▌    ▐█· ▐█▌▐█·▐▀▀▪▄▐█· ▐█▌\n"\
"▐█▄█▌██▐█▌▐█▌▐███▌▐█▌.▐▌▐█•█▌██▐█▌    ██. ██ ▐█▌▐█▄▄▌██. ██ \n"\
" ▀▀▀ ▀▀ █▪▀▀▀·▀▀▀  ▀█▄▀▪.▀  ▀▀▀ █▪    ▀▀▀▀▀• ▀▀▀ ▀▀▀ ▀▀▀▀▀• "

#define PONYTA \
"                    .' .\n"\
"                   .| '\\\n"\
"           _...___/`'   .\n"\
"         ,'             |\n"\
"     ,|,\"             )/|                             , .\n"\
"    / |              / , .                            \\` \\\n"\
"   /            ...-'  ',                              .  \\\n"\
"  .           ,>      .                                |   |\n"\
"  |          .'   ___`,                  .'  ,--.._,.-'/  ,'\n"\
"..|          |.-\"', /                  ,' | /       .\"'   '.\n"\
"\\ '          |  ,'//                   .'  \"    __,._'    |\n"\
" \\ `         /.\"_/'_,                 '.       /         _'\n"\
"  `.\\     _,'   \\.`  ) ,^.              `     '       ,-\"\n"\
"    |.  .'  _   | `. '-  `,            , \\     `.    ,-\n"\
"    | `w  ,\" |  |   \\   .'   _,_ :\"'. / 7 . ,`..'   .'\n"\
"    '|    `.'  /     \\   `-'\"   `   _:_,.}|  :  _. ,'\n"\
"     \\       .'       `-.      _,.-\"       `-+-`  '\n"\
"     |       |           ``--\"'               `.\n"\
"     \\   .- .                                   \\\n"\
"      `.._,\":                                    \\\n"\
"            '                                    `.  '-7\n"\
"             \\                                  .'`-\"  :\n"\
"              \\                        .        `      `-'\n"\
"             j \\                       `.        `.     |\n"\
"             |  `.  |      .^,'.       ,.+        :    _'\n"\
"             |   |`.|      |    \\,  ,-'  :`.       \\  /_.,\n"\
"            /    |  |     /     .,-'.     `.`.      \\   /\n"\
"           /    .' j     / _._,\"     `      ':`.     . (\n"\
"          /    /,-\"|    j  `.         `-.    |  .    |/\n"\
"          .   `'   |    |    7           |   |   |   |\n"\
"           `.   .  |    |  v'            |  .'   |   |\n"\
"             `.  `.|   j'.'              |  |    |  j\n"\
"               \\   |   |                j   |   j   |\n"\
"                `.j   /\\                |_,j    |  j\n"\
"                  /  /`\"              ,\"   |    '  |\n"\
"                 /  j                 '_,.-'   /.-'|\n"\
"                |   |                         /__.-'\n"\
"               .'`-.'\n"\
"              /    |\n"\
"              `----'"

#define PONYTA_DIED \
" ▄▄▄·       ▐ ▄  ▄· ▄▌▄▄▄▄▄ ▄▄▄·     ·▄▄▄▄  ▪  ▄▄▄ .·▄▄▄▄  \n"\
"▐█ ▄█▪     •█▌▐█▐█▪██▌•██  ▐█ ▀█     ██▪ ██ ██ ▀▄.▀·██▪ ██ \n"\
" ██▀· ▄█▀▄ ▐█▐▐▌▐█▌▐█▪ ▐█.▪▄█▀▀█     ▐█· ▐█▌▐█·▐▀▀▪▄▐█· ▐█▌\n"\
"▐█▪·•▐█▌.▐▌██▐█▌ ▐█▀·. ▐█▌·▐█ ▪▐▌    ██. ██ ▐█▌▐█▄▄▌██. ██ \n"\
".▀    ▀█▄▀▪▀▀ █▪  ▀ •  ▀▀▀  ▀  ▀     ▀▀▀▀▀• ▀▀▀ ▀▀▀ ▀▀▀▀▀• "


Pony::Pony( void ) {
	std::cout << "Just created a pony." << std::endl;
}

Pony::~Pony( void ) {
	std::cout << "Just destructed a pony." << std::endl;
	die();
}

Pony		Pony::ponyOnTheStack( void ) {
	Pony	ponyta = Pony();

	ponyta.name = "Ponyta";
	ponyta.image = PONYTA;
	ponyta.death = PONYTA_DIED;
	std::cout << ponyta;
	return (ponyta);
}

Pony		*Pony::ponyOnTheHeap( void ) {
	Pony	*unicorn = new Pony();

	unicorn->name = "Unicorn";
	unicorn->image = UNICORN;
	unicorn->death = UNICORN_DIED;
	std::cout << (*unicorn);
	return (unicorn);
}

void		Pony::print(void) const {
	print(std::cout);
}

void		Pony::print(std::ostream &flux) const {
	flux << "A poney, just born, said his name : \"" << name << "\", what a surprise !" << std::endl;
}

void		Pony::show(void) const {
	std::cout << image << std::endl;
}

void		Pony::die(void) const {
	std::cout << death << std::endl;
}

std::ostream &operator<<(std::ostream& flux, const Pony& p)  {
	p.print(flux);
	return (flux);
}